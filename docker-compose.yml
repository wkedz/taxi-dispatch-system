services:
  database:
    image: postgres:15-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  dispatcher:
    build:
      context: .
      dockerfile: dispatcher_service/Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  taxi:
    build:
      context: .
      dockerfile: taxi_service/Dockerfile
    env_file:
      - .env
    deploy:
      replicas: 5
    depends_on:
      database:
        condition: service_healthy
    expose:
      - "8081"

  grid:
    build:
      context: .
      dockerfile: grid_service/Dockerfile
    env_file:
      - .env
    depends_on:
      dispatcher:
        condition: service_healthy
    ports:
      - "8082:8082"

  client:
    build:
      context: .
      dockerfile: client_service/Dockerfile
    env_file:
      - .env
    deploy:
      replicas: 2
    depends_on:
      dispatcher:
        condition: service_healthy
    expose:
      - "8083"


volumes:
  postgres_data:
